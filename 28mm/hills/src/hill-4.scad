use <hillpolygon.scad>

% translate([0,0,155/2]) cube(size=[240, 153, 155], center=true); 

hill4();

module hill4() {
   hillFromPolygon(angle=25) hill4Polygon();
}

// Note: There is something slightly amiss with this polygon, resulting hill ends up with two
//       volumes (?).
module hill4Polygon() {
   // Apologies for the hackish adjustments ... just wanted to get the job done!
   translate([-10,0,0]) rotate([0,0,55]) translate([75,-10,0]) scale([0.8,0.8]) 
      polygon(points=
         [[-140.478, 124.045], [-137.230, 125.810], [-133.814, 127.261],
         [-130.249, 128.407], [-126.551, 129.260], [-118.827, 130.135],
         [-110.782, 129.975], [-102.554, 128.873], [-94.282, 126.918],
         [-86.104, 124.202], [-78.161, 120.815], [-70.590, 116.849],
         [-63.530, 112.395], [-57.120, 107.543], [-51.500, 102.384],
         [-46.807, 97.010], [-43.182, 91.511], [-40.761, 85.978], [-40.047,
         83.228], [-39.685, 80.503], [-38.803, 70.788], [-37.372, 61.707],
         [-35.232, 53.266], [-32.221, 45.469], [-30.339, 41.813], [-28.180,
         38.321], [-25.722, 34.993], [-22.947, 31.830], [-19.833, 28.831],
         [-16.361, 25.998], [-12.511, 23.332], [-8.262, 20.833], [-3.699,
         18.030], [1.024, 14.503], [5.824, 10.330], [10.615, 5.590],
         [15.315, 0.361], [19.839, -5.279], [24.103, -11.252], [28.023,
         -17.479], [31.515, -23.882], [34.496, -30.382], [36.880, -36.903],
         [38.583, -43.364], [39.523, -49.689], [39.615, -55.798], [38.774,
         -61.614], [36.917, -67.058], [35.046, -70.725], [32.867, -74.217],
         [30.379, -77.524], [27.585, -80.639], [24.484, -83.556], [21.077,
         -86.264], [17.366, -88.758], [13.350, -91.029], [9.031, -93.069],
         [4.409, -94.871], [-0.514, -96.427], [-5.739, -97.729], [-11.264,
         -98.769], [-17.089, -99.539], [-23.213, -100.032], [-29.635,
         -100.240], [-39.310, -100.153], [-48.272, -99.722], [-56.565,
         -98.983], [-64.233, -97.967], [-71.320, -96.710], [-77.870,
         -95.245], [-89.537, -91.828], [-99.587, -87.986], [-108.374,
         -83.990], [-123.572, -76.623], [-129.392, -73.760], [-134.677,
         -70.651], [-139.458, -67.328], [-143.761, -63.822], [-147.618,
         -60.167], [-151.056, -56.395], [-154.105, -52.536], [-156.794,
         -48.625], [-161.207, -40.769], [-164.527, -33.084], [-166.987,
         -25.828], [-168.818, -19.258], [-170.193, -13.243], [-171.281,
         -6.864], [-172.108, 0.055], [-172.700, 7.691], [-173.288,
         25.811], [-173.262, 48.900], [-173.153, 59.445], [-172.757,
         69.740], [-171.648, 79.745], [-170.692, 84.627], [-169.398,
         89.422], [-167.713, 94.124], [-165.583, 98.729], [-162.955,
         103.233], [-159.776, 107.629], [-155.992, 111.913], [-151.550,
         116.081], [-146.396, 120.126], [-140.478, 124.045]]
      , paths=
         [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,
         18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
         34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,
         50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
         66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
         82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
         98, 99, 100, 101, 102, 103, 104, 0]]
    );}
